version: '3.9'

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    networks:
      heatappnet:
        ipv4_address: 172.25.0.2
    extra_hosts:
      - "database:172.25.0.3"
      - "appserver:172.25.0.4"
      - "nginx:172.25.0.2"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./secrets/certs:/etc/ssl/certs
      - ./secrets/private:/etc/ssl/private
      - ./secrets/snippets:/etc/nginx/snippets
    depends_on:
      - appserver

  appserver:
    image: payara/server-full:6.2023.3-jdk17
    ports:
      - "8080:8080"
      - "4848:4848"
      - "9009:9009"
    extra_hosts:
      - "database:172.25.0.3"
      - "appserver:172.25.0.4"
      - "nginx:172.25.0.2"
    networks:
      heatappnet:
        ipv4_address: 172.25.0.4
    environment:
      - JVM_ARGS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:9009
    depends_on:
      database:
        condition: service_healthy

  database:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: ssbd03
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./create_db_users.sh:/docker-entrypoint-initdb.d/create_db_users.sh
    extra_hosts:
      - "database:172.25.0.3"
      - "appserver:172.25.0.4"
      - "nginx:172.25.0.2"
    networks:
      heatappnet:
        ipv4_address: 172.25.0.3
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  heatappnet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/24